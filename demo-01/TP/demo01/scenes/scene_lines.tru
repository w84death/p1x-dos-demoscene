unit SceneLines;
@use "math/random"
var
	len : byte = 5;
	x1,x2 : integer = 160;
	y1,y2 : integer = 100;
	sx,sy : integer;
	i,c,shift : integer = 0;
	const width : byte = 15;
	color : byte = 0;
	
	sinx : array[256] of integer = buildsinetable(320-width);
	siny : array[256] of integer = buildsinetable(200-width);
	grad : array[128] of byte = buildsinetable(64);
	
	welcome_text: string="HELLO, TURBO RASCAL!";
	tp:pointer;
	
procedure SetPalette();
begin
	// next 64 colors are pinkish
	for i:=0 to 64 do
	begin
		c:=32+grad[i];
		Screen::SetColor(i,		c,c,c);
		Screen::SetColor(64+i,	c/2,c,c);
		Screen::SetColor(128+i,	c,c/2,c);
		Screen::SetColor(192+i,	c,c,c/2);
	end;
end;

procedure Init();
begin
	Random::Init(7);
	SetPalette();
	tp:=#welcome_text;
	shift:=0;
end;


procedure Render(time : integer);
begin
	for i:=0 to 32 do
	begin
		sx := sinx[(i*width+time*2)&255];
		sy := siny[(i*width+time*3+shift)&255];
		
		x1 := x2;
		y1 := y2;
		x2 := mod(Random::Random(),width)+sx;
		y2 := mod(Random::Random(),width)+sy;
		
		Gfx::DrawLine(x1,y1,x2,y2, (color+i)&255, Screen::buffer1);
	end;
	if(time&15=0) then shift+=1;
	Fonts::addValue:=color&255;
	Fonts::PrintString(tp,160-(hi(tp))*5,100,Screen::buffer1);
	inc(color);	
end;
	
end.